\babel@toc {english}{}
\contentsline {section}{\numberline {1}Introduction}{1}{section.1}
\contentsline {subsection}{\numberline {1.1}Acknowledgement}{4}{subsection.1.1}
\contentsline {section}{\numberline {2}Background}{4}{section.2}
\contentsline {subsection}{\numberline {2.1}Related Work}{8}{subsection.2.1}
\contentsline {subsubsection}{\numberline {2.1.1}PatchMatch}{8}{subsubsection.2.1.1}
\contentsline {subsubsection}{\numberline {2.1.2}Coherency Sensitive Hashing}{9}{subsubsection.2.1.2}
\contentsline {section}{\numberline {3}Implementation}{9}{section.3}
\contentsline {subsection}{\numberline {3.1}The Brute Force Version}{9}{subsection.3.1}
\contentsline {subsection}{\numberline {3.2}k-d Tree Construction}{10}{subsection.3.2}
\contentsline {subsection}{\numberline {3.3}Tree Traversal}{11}{subsection.3.3}
\contentsline {subsubsection}{\numberline {3.3.1}Representing the Stack as an Integer}{15}{subsubsection.3.3.1}
\contentsline {subsubsection}{\numberline {3.3.2}Validating Whether to Look at the \texttt {second}}{15}{subsubsection.3.3.2}
\contentsline {subsection}{\numberline {3.4}The Full Implementation}{17}{subsection.3.4}
\contentsline {section}{\numberline {4}Experimental Evaluation}{17}{section.4}
\contentsline {subsection}{\numberline {4.1}Optimisation using Sorting over Partition}{17}{subsection.4.1}
\contentsline {subsection}{\numberline {4.2}Optimising Tree Traversal with Full Dimensionality Checking}{19}{subsection.4.2}
\contentsline {subsubsection}{\numberline {4.2.1}Demonstrating a Comparison of the Number of Leaf Visits}{20}{subsubsection.4.2.1}
\contentsline {subsection}{\numberline {4.3}Brute Force versus k-d Trees for Computing KNN}{22}{subsection.4.3}
\contentsline {section}{\numberline {5}Conclusion}{24}{section.5}
\contentsline {section}{\numberline {6}Appendix}{24}{section.6}
\contentsline {subsection}{\numberline {6.1}Additional Graphs for Performance of Brute Force versus k-d Trees}{24}{subsection.6.1}
\contentsline {section}{References}{26}{section*.25}
